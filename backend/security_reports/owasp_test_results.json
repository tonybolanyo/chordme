{"created": 1756243184.5247343, "duration": 1.9693715572357178, "exitcode": 1, "root": "/home/runner/work/chordme/chordme/backend", "environment": {}, "summary": {"passed": 4, "failed": 3, "error": 17, "total": 24, "collected": 24}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py", "type": "Module"}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl::test_unauthorized_api_access_prevention", "type": "Function", "lineno": 26}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl::test_privilege_escalation_prevention", "type": "Function", "lineno": 39}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl::test_insecure_direct_object_references", "type": "Function", "lineno": 50}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures::test_password_encryption_strength", "type": "Function", "lineno": 64}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures::test_jwt_token_security", "type": "Function", "lineno": 76}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures::test_https_enforcement", "type": "Function", "lineno": 92}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection::test_sql_injection_prevention", "type": "Function", "lineno": 109}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection::test_xss_prevention", "type": "Function", "lineno": 135}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection::test_chordpro_injection_prevention", "type": "Function", "lineno": 160}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA04InsecureDesign", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA04InsecureDesign::test_business_logic_bypass_prevention", "type": "Function", "lineno": 184}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA04InsecureDesign::test_rate_limiting_business_logic", "type": "Function", "lineno": 199}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration::test_security_headers_present", "type": "Function", "lineno": 225}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration::test_error_message_information_disclosure", "type": "Function", "lineno": 240}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration::test_cors_configuration", "type": "Function", "lineno": 263}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures::test_password_policy_enforcement", "type": "Function", "lineno": 276}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures::test_session_management_security", "type": "Function", "lineno": 296}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures::test_brute_force_protection", "type": "Function", "lineno": 309}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA08DataIntegrityFailures", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA08DataIntegrityFailures::test_data_integrity_validation", "type": "Function", "lineno": 330}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA08DataIntegrityFailures::test_input_sanitization", "type": "Function", "lineno": 347}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA09SecurityLoggingFailures", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA09SecurityLoggingFailures::test_security_event_logging", "type": "Function", "lineno": 375}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA09SecurityLoggingFailures::test_audit_trail_completeness", "type": "Function", "lineno": 385}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA10ServerSideRequestForgery", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA10ServerSideRequestForgery::test_url_validation_prevention", "type": "Function", "lineno": 412}]}, {"nodeid": "tests/test_owasp_security_audit.py::TestSecurityTestConfiguration", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestSecurityTestConfiguration::test_security_test_coverage", "type": "Function", "lineno": 447}, {"nodeid": "tests/test_owasp_security_audit.py::TestSecurityTestConfiguration::test_security_tools_available", "type": "Function", "lineno": 469}]}, {"nodeid": "tests/test_owasp_security_audit.py", "outcome": "passed", "result": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA04InsecureDesign", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA08DataIntegrityFailures", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA09SecurityLoggingFailures", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA10ServerSideRequestForgery", "type": "Class"}, {"nodeid": "tests/test_owasp_security_audit.py::TestSecurityTestConfiguration", "type": "Class"}]}], "tests": [{"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl::test_unauthorized_api_access_prevention", "lineno": 26, "outcome": "passed", "keywords": ["test_unauthorized_api_access_prevention", "TestOWASPA01BrokenAccessControl", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.3077875999999833, "outcome": "passed"}, "call": {"duration": 0.00313412800005608, "outcome": "passed"}, "teardown": {"duration": 0.0055668110001079185, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl::test_privilege_escalation_prevention", "lineno": 39, "outcome": "failed", "keywords": ["test_privilege_escalation_prevention", "TestOWASPA01BrokenAccessControl", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.557606190000115, "outcome": "passed"}, "call": {"duration": 0.0010995640000146523, "outcome": "failed", "crash": {"path": "/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py", "lineno": 49, "message": "assert 405 in [403, 404]\n +  where 405 = <WrapperTestResponse streamed [405 METHOD NOT ALLOWED]>.status_code"}, "traceback": [{"path": "tests/test_owasp_security_audit.py", "lineno": 49, "message": "in test_privilege_escalation_prevention"}], "longrepr": "tests/test_owasp_security_audit.py:49: in test_privilege_escalation_prevention\n    assert response.status_code in [403, 404]\nE   assert 405 in [403, 404]\nE    +  where 405 = <WrapperTestResponse streamed [405 METHOD NOT ALLOWED]>.status_code"}, "teardown": {"duration": 0.006960176999882606, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA01BrokenAccessControl::test_insecure_direct_object_references", "lineno": 50, "outcome": "passed", "keywords": ["test_insecure_direct_object_references", "TestOWASPA01BrokenAccessControl", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.539170181000145, "outcome": "passed"}, "call": {"duration": 0.0034622680000211403, "outcome": "passed", "log": [{"name": "chordme.permission_helpers", "msg": "SECURITY_AUDIT: SONG_ACCESS_ATTEMPT | User: 1 | IP: 127.0.0.1 | Details: {\"song_id\": 99999, \"permission_level\": \"read\", \"access_granted\": false, \"additional_details\": {\"reason\": \"song_not_found\"}}", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/runner/work/chordme/chordme/backend/chordme/permission_helpers.py", "filename": "permission_helpers.py", "module": "permission_helpers", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 49, "funcName": "log_security_event", "created": 1756243184.1326153, "msecs": 132.0, "relativeCreated": 1664.5917892456055, "thread": 140142284980352, "threadName": "MainThread", "processName": "MainProcess", "process": 4010, "taskName": null}, {"name": "chordme", "msg": "{\"timestamp\": \"2025-08-26T21:19:44.132733\", \"level\": \"WARNING\", \"message\": \"AUDIT: SONG_ACCESS_ATTEMPT\", \"service\": \"chordme-backend\", \"request_id\": null, \"method\": \"GET\", \"url\": \"http://localhost/api/v1/songs/99999\", \"remote_addr\": \"127.0.0.1\", \"user_agent\": \"Werkzeug/3.1.3\", \"user_id\": 1, \"event_type\": \"SONG_ACCESS_ATTEMPT\", \"audit_details\": {\"song_id\": 99999, \"permission_level\": \"read\", \"access_granted\": false, \"additional_details\": {\"reason\": \"song_not_found\"}}, \"category\": \"audit\"}", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/runner/work/chordme/chordme/backend/chordme/logging_config.py", "filename": "logging_config.py", "module": "logging_config", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 78, "funcName": "audit", "created": 1756243184.1328, "msecs": 132.0, "relativeCreated": 1664.7765636444092, "thread": 140142284980352, "threadName": "MainThread", "processName": "MainProcess", "process": 4010, "taskName": null}]}, "teardown": {"duration": 0.005626721999988149, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures::test_password_encryption_strength", "lineno": 64, "outcome": "failed", "keywords": ["test_password_encryption_strength", "TestOWASPA02CryptographicFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.008394199000122171, "outcome": "passed"}, "call": {"duration": 0.2631354359998568, "outcome": "failed", "crash": {"path": "/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py", "lineno": 73, "message": "AttributeError: 'User' object has no attribute 'password'"}, "traceback": [{"path": "tests/test_owasp_security_audit.py", "lineno": 73, "message": "in test_password_encryption_strength"}], "longrepr": "tests/test_owasp_security_audit.py:73: in test_password_encryption_strength\n    assert user.password != 'TestPassword123'\n           ^^^^^^^^^^^^^\nE   AttributeError: 'User' object has no attribute 'password'"}, "teardown": {"duration": 0.005567272000007506, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures::test_jwt_token_security", "lineno": 76, "outcome": "failed", "keywords": ["test_jwt_token_security", "TestOWASPA02CryptographicFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.008257414999889079, "outcome": "passed"}, "call": {"duration": 0.00015420599993376527, "outcome": "failed", "crash": {"path": "/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py", "lineno": 79, "message": "ImportError: cannot import name 'generate_token' from 'chordme.utils' (/home/runner/work/chordme/chordme/backend/chordme/utils.py)"}, "traceback": [{"path": "tests/test_owasp_security_audit.py", "lineno": 79, "message": "in test_jwt_token_security"}], "longrepr": "tests/test_owasp_security_audit.py:79: in test_jwt_token_security\n    from chordme.utils import generate_token, verify_token\nE   ImportError: cannot import name 'generate_token' from 'chordme.utils' (/home/runner/work/chordme/chordme/backend/chordme/utils.py)"}, "teardown": {"duration": 0.004982384999948408, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA02CryptographicFailures::test_https_enforcement", "lineno": 92, "outcome": "error", "keywords": ["test_https_enforcement", "TestOWASPA02CryptographicFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.0002742290000696812, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 93\n      def test_https_enforcement(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:93"}, "teardown": {"duration": 0.00014519000001200766, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection::test_sql_injection_prevention", "lineno": 109, "outcome": "error", "keywords": ["test_sql_injection_prevention", "TestOWASPA03Injection", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00024727000004531874, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 110\n      def test_sql_injection_prevention(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:110"}, "teardown": {"duration": 0.0001362129999051831, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection::test_xss_prevention", "lineno": 135, "outcome": "error", "keywords": ["test_xss_prevention", "TestOWASPA03Injection", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.0002427009999337315, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 136\n      def test_xss_prevention(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:136"}, "teardown": {"duration": 0.00013414000000011583, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA03Injection::test_chordpro_injection_prevention", "lineno": 160, "outcome": "error", "keywords": ["test_chordpro_injection_prevention", "TestOWASPA03Injection", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023878399997556699, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 161\n      def test_chordpro_injection_prevention(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:161"}, "teardown": {"duration": 0.0001338989998203033, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA04InsecureDesign::test_business_logic_bypass_prevention", "lineno": 184, "outcome": "error", "keywords": ["test_business_logic_bypass_prevention", "TestOWASPA04InsecureDesign", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00024516600001334155, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 185\n      def test_business_logic_bypass_prevention(self, test_client, security_users, vulnerable_song):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:185"}, "teardown": {"duration": 0.000130351999814593, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA04InsecureDesign::test_rate_limiting_business_logic", "lineno": 199, "outcome": "error", "keywords": ["test_rate_limiting_business_logic", "TestOWASPA04InsecureDesign", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.0002327429999695596, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 200\n      def test_rate_limiting_business_logic(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:200"}, "teardown": {"duration": 0.00013655399993695028, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration::test_security_headers_present", "lineno": 225, "outcome": "error", "keywords": ["test_security_headers_present", "TestOWASPA05SecurityMisconfiguration", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023336399999607238, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 226\n      def test_security_headers_present(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:226"}, "teardown": {"duration": 0.0002542219999668305, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration::test_error_message_information_disclosure", "lineno": 240, "outcome": "error", "keywords": ["test_error_message_information_disclosure", "TestOWASPA05SecurityMisconfiguration", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023402500005431648, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 241\n      def test_error_message_information_disclosure(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:241"}, "teardown": {"duration": 0.00013054300006842823, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA05SecurityMisconfiguration::test_cors_configuration", "lineno": 263, "outcome": "error", "keywords": ["test_cors_configuration", "TestOWASPA05SecurityMisconfiguration", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00024074800012385822, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 264\n      def test_cors_configuration(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:264"}, "teardown": {"duration": 0.0001309029998992628, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures::test_password_policy_enforcement", "lineno": 276, "outcome": "error", "keywords": ["test_password_policy_enforcement", "TestOWASPA07AuthenticationFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.0002305279999745835, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 277\n      def test_password_policy_enforcement(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:277"}, "teardown": {"duration": 0.00013560200000029, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures::test_session_management_security", "lineno": 296, "outcome": "error", "keywords": ["test_session_management_security", "TestOWASPA07AuthenticationFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023045900002216513, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 297\n      def test_session_management_security(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:297"}, "teardown": {"duration": 0.0001492080000389251, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA07AuthenticationFailures::test_brute_force_protection", "lineno": 309, "outcome": "error", "keywords": ["test_brute_force_protection", "TestOWASPA07AuthenticationFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023149000003286346, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 310\n      def test_brute_force_protection(self, test_client):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:310"}, "teardown": {"duration": 0.00013025199996263837, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA08DataIntegrityFailures::test_data_integrity_validation", "lineno": 330, "outcome": "error", "keywords": ["test_data_integrity_validation", "TestOWASPA08DataIntegrityFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023367499989035423, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 331\n      def test_data_integrity_validation(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:331"}, "teardown": {"duration": 0.00014180400012264727, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA08DataIntegrityFailures::test_input_sanitization", "lineno": 347, "outcome": "error", "keywords": ["test_input_sanitization", "TestOWASPA08DataIntegrityFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023298299993257388, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 348\n      def test_input_sanitization(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:348"}, "teardown": {"duration": 0.0001568519999182172, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA09SecurityLoggingFailures::test_security_event_logging", "lineno": 375, "outcome": "error", "keywords": ["test_security_event_logging", "TestOWASPA09SecurityLoggingFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023696099992775999, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 376\n      def test_security_event_logging(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:376"}, "teardown": {"duration": 0.00013049299991507723, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA09SecurityLoggingFailures::test_audit_trail_completeness", "lineno": 385, "outcome": "error", "keywords": ["test_audit_trail_completeness", "TestOWASPA09SecurityLoggingFailures", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.0002460880000398902, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 386\n      def test_audit_trail_completeness(self, test_client, security_users, vulnerable_song):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:386"}, "teardown": {"duration": 0.0001295100000788807, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestOWASPA10ServerSideRequestForgery::test_url_validation_prevention", "lineno": 412, "outcome": "error", "keywords": ["test_url_validation_prevention", "TestOWASPA10ServerSideRequestForgery", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.0002417089999653399, "outcome": "failed", "longrepr": "file /home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py, line 413\n      def test_url_validation_prevention(self, test_client, auth_headers):\nE       fixture 'test_client' not found\n>       available fixtures: _configure_application, _monkeypatch_response_class, _push_request_context, accept_any, accept_json, accept_jsonp, accept_mimetype, app, auth_token, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, client_class, config, cov, doctest_namespace, include_metadata_in_junit_xml, invalid_emails, invalid_passwords, json_metadata, live_server, metadata, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_user_data, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, valid_user_variations\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/chordme/chordme/backend/tests/test_owasp_security_audit.py:413"}, "teardown": {"duration": 0.00013173499996810278, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestSecurityTestConfiguration::test_security_test_coverage", "lineno": 447, "outcome": "passed", "keywords": ["test_security_test_coverage", "TestSecurityTestConfiguration", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00023858400004428404, "outcome": "passed"}, "call": {"duration": 0.00010853200001292862, "outcome": "passed"}, "teardown": {"duration": 0.00012671600006797235, "outcome": "passed"}}, {"nodeid": "tests/test_owasp_security_audit.py::TestSecurityTestConfiguration::test_security_tools_available", "lineno": 469, "outcome": "passed", "keywords": ["test_security_tools_available", "TestSecurityTestConfiguration", "test_owasp_security_audit.py", "tests", "backend", ""], "setup": {"duration": 0.00024105800002871547, "outcome": "passed"}, "call": {"duration": 0.06367290799994407, "outcome": "passed", "log": [{"name": "stevedore.extension", "msg": "Could not load 'sarif': No module named 'sarif_om'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/runner/.local/lib/python3.12/site-packages/stevedore/extension.py", "filename": "extension.py", "module": "extension", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 227, "funcName": "_load_plugins", "created": 1756243184.4793606, "msecs": 479.0, "relativeCreated": 2011.3370418548584, "thread": 140142284980352, "threadName": "MainThread", "processName": "MainProcess", "process": 4010, "taskName": null}]}, "teardown": {"duration": 0.0001794639999843639, "outcome": "passed"}}], "warnings": [{"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/monitoring.py", "lineno": 84}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/logging_config.py", "lineno": 26}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/logging_config.py", "lineno": 26}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/.local/lib/python3.12/site-packages/sqlalchemy/sql/schema.py", "lineno": 3624}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/.local/lib/python3.12/site-packages/sqlalchemy/sql/schema.py", "lineno": 3624}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/utils.py", "lineno": 316}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/utils.py", "lineno": 317}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/.local/lib/python3.12/site-packages/sqlalchemy/sql/schema.py", "lineno": 3624}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/.local/lib/python3.12/site-packages/sqlalchemy/sql/schema.py", "lineno": 3624}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/utils.py", "lineno": 316}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/utils.py", "lineno": 317}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/permission_helpers.py", "lineno": 32}, {"message": "datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/work/chordme/chordme/backend/chordme/logging_config.py", "lineno": 26}, {"message": "ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead", "category": "DeprecationWarning", "when": "runtest", "filename": "/home/runner/.local/lib/python3.12/site-packages/bandit/core/utils.py", "lineno": 364}]}