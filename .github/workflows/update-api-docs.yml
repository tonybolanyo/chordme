name: Update API Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/chordme/api.py'
      - 'backend/chordme/__init__.py'
      - 'backend/chordme/models.py'
      - 'backend/requirements.txt'
      - '.github/workflows/update-api-docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/chordme/api.py'
      - 'backend/chordme/__init__.py'
      - 'backend/chordme/models.py'
      - 'backend/requirements.txt'
      - '.github/workflows/update-api-docs.yml'

jobs:
  update-api-docs:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: './backend/requirements.txt'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests
    
    - name: Setup configuration
      run: cp config.template.py config.py
    
    - name: Set debug mode and disable HTTPS for docs generation
      run: |
        cat >> config.py << EOF
        DEBUG = True
        HTTPS_ENFORCED = False
        EOF
    
    - name: Generate API documentation
      run: |
        echo "::group::API Documentation Generation"
        if python generate_docs.py; then
          echo "✅ API documentation generated successfully"
        else
          echo "❌ API documentation generation failed"
          echo "::error title=API Documentation Generation Failed::Please check the Flask application and generate_docs.py script"
          # Continue anyway as this might be expected in some cases
        fi
        echo "::endgroup::"
      continue-on-error: true
    
    - name: Validate generated documentation
      run: |
        echo "::group::Documentation Format Validation"
        chmod +x ../scripts/validate-docs.sh
        ../scripts/validate-docs.sh
        echo "::endgroup::"
      working-directory: ./
    
    - name: Check if docs changed
      id: docs-changed
      run: |
        if git diff --quiet docs/; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
      working-directory: ./
    
    - name: Commit and push documentation changes
      if: steps.docs-changed.outputs.changed == 'true' && github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/
        git commit -m "Auto-update API documentation [skip ci]"
        git push
      working-directory: ./
    
    - name: Upload documentation artifacts
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: api-documentation
        path: docs/
        retention-days: 30