{
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Error": {
      "properties": {
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "status_code": {
          "description": "HTTP status code",
          "type": "integer"
        },
        "success": {
          "example": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Song": {
      "properties": {
        "author_id": {
          "description": "ID of the user who created the song",
          "type": "integer"
        },
        "content": {
          "description": "ChordPro content",
          "type": "string"
        },
        "created_at": {
          "description": "Song creation timestamp",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Song ID",
          "type": "integer"
        },
        "title": {
          "description": "Song title",
          "type": "string"
        },
        "updated_at": {
          "description": "Song last update timestamp",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Success": {
      "properties": {
        "data": {
          "description": "Response data",
          "type": "object"
        },
        "message": {
          "description": "Success message",
          "type": "string"
        },
        "success": {
          "example": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "created_at": {
          "description": "Account creation timestamp",
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "description": "User email address",
          "format": "email",
          "type": "string"
        },
        "id": {
          "description": "User ID",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "info": {
    "contact": {
      "name": "ChordMe",
      "url": "https://github.com/tonybolanyo/chordme"
    },
    "description": "API for ChordMe - A ChordPro song management application",
    "title": "ChordMe API",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Authenticate user with email and password, returns JWT token for API access",
        "parameters": [
          {
            "description": "User login credentials",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "description": "User email address",
                  "example": "user@example.com",
                  "format": "email",
                  "type": "string"
                },
                "password": {
                  "description": "User password",
                  "example": "SecurePass123!",
                  "format": "password",
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "token": {
                          "description": "JWT authentication token",
                          "type": "string"
                        },
                        "user": {
                          "$ref": "#/definitions/User"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or missing credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many login attempts",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Authenticate user and get JWT token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "description": "Create a new user account with email and password. Requires strong password and valid email format.",
        "parameters": [
          {
            "description": "User registration details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "description": "Valid email address",
                  "example": "user@example.com",
                  "format": "email",
                  "type": "string"
                },
                "password": {
                  "description": "Strong password (min 8 chars, uppercase, lowercase, number, special char)",
                  "example": "SecurePass123!",
                  "format": "password",
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/User"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "User with this email already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many registration attempts",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Register a new user account",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/chords": {
      "get": {
        "description": "Retrieve all custom chords owned by the authenticated user",
        "responses": {
          "200": {
            "description": "Chords retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "chords": {
                          "items": {
                            "$ref": "#/definitions/Chord"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get all custom chords for authenticated user",
        "tags": [
          "Chords"
        ]
      },
      "post": {
        "description": "Create a new custom chord definition for the authenticated user",
        "parameters": [
          {
            "description": "Chord details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "definition": {
                  "description": "Chord definition/fingering (max 1,000 characters)",
                  "example": "x32000",
                  "type": "string"
                },
                "description": {
                  "description": "Optional description or notes (max 500 characters)",
                  "example": "Easy open chord voicing",
                  "type": "string"
                },
                "name": {
                  "description": "Chord name (max 50 characters)",
                  "example": "Cmaj7",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "definition"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Chord created successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/Chord"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create a new custom chord",
        "tags": [
          "Chords"
        ]
      }
    },
    "/chords/{chord_id}": {
      "delete": {
        "description": "Delete a specific chord by its ID (only if owned by authenticated user)",
        "parameters": [
          {
            "description": "Chord ID",
            "in": "path",
            "minimum": 1,
            "name": "chord_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Chord deleted successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chord not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a specific chord by ID",
        "tags": [
          "Chords"
        ]
      },
      "get": {
        "description": "Retrieve a specific chord by its ID (only if owned by authenticated user)",
        "parameters": [
          {
            "description": "Chord ID",
            "in": "path",
            "minimum": 1,
            "name": "chord_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Chord retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/Chord"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chord not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get a specific chord by ID",
        "tags": [
          "Chords"
        ]
      },
      "put": {
        "description": "Update a specific chord by its ID (only if owned by authenticated user)",
        "parameters": [
          {
            "description": "Chord ID",
            "in": "path",
            "minimum": 1,
            "name": "chord_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Updated chord details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "definition": {
                  "description": "Chord definition/fingering (max 1,000 characters)",
                  "example": "x35453",
                  "type": "string"
                },
                "description": {
                  "description": "Optional description or notes (max 500 characters)",
                  "example": "Barre chord voicing",
                  "type": "string"
                },
                "name": {
                  "description": "Chord name (max 50 characters)",
                  "example": "Cmaj7_updated",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chord updated successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/Chord"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chord not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update a specific chord by ID",
        "tags": [
          "Chords"
        ]
      }
    },
    "/csrf-token": {
      "get": {
        "description": "Returns a CSRF token that must be included in form submissions for security",
        "responses": {
          "200": {
            "description": "CSRF token generated successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "csrf_token": {
                          "description": "CSRF token for form submissions",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "summary": "Get CSRF token for form submissions",
        "tags": [
          "Security"
        ]
      }
    },
    "/google-drive/backup-songs": {
      "post": {
        "description": "Create a backup of all user songs in Google Drive organized in a dedicated folder",
        "parameters": [
          {
            "description": "Backup configuration",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "properties": {
                "access_token": {
                  "description": "Google OAuth2 access token",
                  "type": "string"
                },
                "backup_folder_name": {
                  "default": "ChordMe Backup",
                  "description": "Name of the backup folder (optional)",
                  "type": "string"
                }
              },
              "required": [
                "access_token"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Backup completed",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "backed_up": {
                      "type": "integer"
                    },
                    "files": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "folder_id": {
                      "type": "string"
                    },
                    "folder_name": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "total_songs": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "example": "success",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Backup user songs to Google Drive",
        "tags": [
          "Google Drive"
        ]
      }
    },
    "/google-drive/batch-validate": {
      "post": {
        "description": "Validate multiple ChordPro files from Google Drive in a single operation",
        "parameters": [
          {
            "description": "Google Drive file IDs to validate",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "properties": {
                "access_token": {
                  "description": "Google OAuth2 access token",
                  "type": "string"
                },
                "file_ids": {
                  "description": "List of Google Drive file IDs to validate",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "access_token",
                "file_ids"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Batch validation completed",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "processed": {
                      "type": "integer"
                    },
                    "results": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "example": "success",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Batch validate multiple ChordPro files from Google Drive",
        "tags": [
          "Google Drive"
        ]
      }
    },
    "/google-drive/validate-and-save": {
      "post": {
        "description": "Server-side validation of ChordPro content before saving to Google Drive",
        "parameters": [
          {
            "description": "ChordPro content and file information",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "properties": {
                "access_token": {
                  "description": "Google OAuth2 access token",
                  "type": "string"
                },
                "content": {
                  "description": "ChordPro content to validate and save",
                  "type": "string"
                },
                "file_name": {
                  "description": "Name for the file in Google Drive",
                  "type": "string"
                },
                "parent_folder_id": {
                  "description": "Optional parent folder ID in Google Drive",
                  "type": "string"
                }
              },
              "required": [
                "access_token",
                "file_name",
                "content"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation and save completed",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "file": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "validation": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "example": "success",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request or validation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Validate ChordPro content and save to Google Drive",
        "tags": [
          "Google Drive"
        ]
      }
    },
    "/health": {
      "get": {
        "description": "Returns the current status of the API service",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "schema": {
              "properties": {
                "message": {
                  "example": "Service is running",
                  "type": "string"
                },
                "status": {
                  "example": "ok",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Health check endpoint",
        "tags": [
          "System"
        ]
      }
    },
    "/songs": {
      "get": {
        "description": "Retrieve all songs owned by the authenticated user",
        "responses": {
          "200": {
            "description": "Songs retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "songs": {
                          "items": {
                            "$ref": "#/definitions/Song"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get all songs for authenticated user",
        "tags": [
          "Songs"
        ]
      },
      "post": {
        "description": "    ",
        "parameters": [
          {
            "description": "Song details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "content": {
                  "description": "ChordPro content (max 10,000 characters)",
                  "example": "{title: Amazing Grace} {artist: Traditional}\n[C]Amazing [F]grace how [C]sweet the sound",
                  "type": "string"
                },
                "title": {
                  "description": "Song title (max 200 characters)",
                  "example": "Amazing Grace",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "content"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Song created successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/Song"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "    Create a new song",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/transpose-chordpro": {
      "post": {
        "description": "    ",
        "parameters": [
          {
            "description": "Content and transposition parameters",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "content": {
                  "description": "ChordPro content to transpose",
                  "example": "{title: Test Song} [C]Hello [G]world [Am]test",
                  "type": "string"
                },
                "semitones": {
                  "description": "Number of semitones to transpose (positive = up, negative = down)",
                  "example": 2,
                  "maximum": 11,
                  "minimum": -11,
                  "type": "integer"
                }
              },
              "required": [
                "content",
                "semitones"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content transposed successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "chords_changed": {
                          "description": "List of chord changes made",
                          "items": {
                            "properties": {
                              "original": {
                                "type": "string"
                              },
                              "transposed": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "original_content": {
                          "description": "Original ChordPro content",
                          "type": "string"
                        },
                        "semitones": {
                          "description": "Number of semitones transposed",
                          "type": "integer"
                        },
                        "transposed_content": {
                          "description": "Transposed ChordPro content",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "    Transpose all chords in ChordPro content by a specified number of semitones",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/validate-chordpro": {
      "post": {
        "description": "    ",
        "parameters": [
          {
            "description": "ChordPro content to validate",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "content": {
                  "description": "ChordPro content to validate (max 15,000 characters)",
                  "example": "{title: Test Song} {artist: Test Artist}\n[C]Hello [F]world [G]how are [C]you",
                  "type": "string"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ChordPro content validated successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "chord_count": {
                          "description": "Number of chords found",
                          "type": "integer"
                        },
                        "directives": {
                          "description": "Parsed ChordPro directives",
                          "type": "object"
                        },
                        "is_valid": {
                          "description": "Whether the content is valid ChordPro",
                          "type": "boolean"
                        },
                        "line_count": {
                          "description": "Number of lines",
                          "type": "integer"
                        },
                        "warnings": {
                          "description": "List of validation warnings",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "    Validate ChordPro content",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/{song_id}": {
      "delete": {
        "description": "Delete a specific song by its ID (requires admin permissions - only owner)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Song deleted successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a specific song by ID",
        "tags": [
          "Songs"
        ]
      },
      "get": {
        "description": "Retrieve a specific song by its ID (accessible if owned, shared, or public)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Song retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/Song"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get a specific song by ID",
        "tags": [
          "Songs"
        ]
      },
      "put": {
        "description": "    ",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Updated song details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "content": {
                  "description": "ChordPro content (max 10,000 characters)",
                  "example": "{title: Amazing Grace} {artist: Traditional}\n[C]Amazing [F]grace how [C]sweet the sound",
                  "type": "string"
                },
                "title": {
                  "description": "Song title (max 200 characters)",
                  "example": "Amazing Grace (Updated)",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Song updated successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/Song"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "Request entity too large",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "    Update a specific song by ID",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/{song_id}/collaborators": {
      "get": {
        "description": "Retrieve list of users who have access to the song (requires read permissions)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Collaborators retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "collaborators": {
                          "items": {
                            "properties": {
                              "email": {
                                "description": "User email",
                                "type": "string"
                              },
                              "granted_at": {
                                "description": "When access was granted",
                                "format": "date-time",
                                "type": "string"
                              },
                              "permission_level": {
                                "description": "Permission level",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "User ID",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "owner": {
                          "properties": {
                            "email": {
                              "description": "Owner email",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Owner user ID",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get list of collaborators for a song",
        "tags": [
          "Collaboration"
        ]
      }
    },
    "/songs/{song_id}/download": {
      "get": {
        "description": "Download a specific song as a ChordPro (.cho) file (accessible if owned, shared, or public)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Song file downloaded successfully",
            "headers": {
              "Content-Disposition": {
                "description": "attachment; filename=\"songname.cho\"",
                "type": "string"
              },
              "Content-Type": {
                "description": "text/plain; charset=utf-8",
                "type": "string"
              }
            },
            "schema": {
              "description": "ChordPro file content",
              "type": "string"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Download song as ChordPro file",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/{song_id}/permissions": {
      "put": {
        "description": "Update permission level for a user on the song (requires admin permissions)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Permission update details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "permission_level": {
                  "description": "New permission level",
                  "enum": [
                    "read",
                    "edit",
                    "admin"
                  ],
                  "example": "admin",
                  "type": "string"
                },
                "user_email": {
                  "description": "Email of user to update permissions for",
                  "example": "collaborator@example.com",
                  "format": "email",
                  "type": "string"
                }
              },
              "required": [
                "user_email",
                "permission_level"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions updated successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "new_permission": {
                          "description": "New permission level",
                          "type": "string"
                        },
                        "old_permission": {
                          "description": "Previous permission level",
                          "type": "string"
                        },
                        "user_email": {
                          "description": "Email of the user",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "ID of the user",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song or user not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update user permissions for a song",
        "tags": [
          "Collaboration"
        ]
      }
    },
    "/songs/{song_id}/sections": {
      "get": {
        "description": "Retrieve all sections for a specific song (accessible if owned, shared, or public)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Song sections retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "sections": {
                          "items": {
                            "properties": {
                              "content": {
                                "description": "Raw ChordPro content for this section",
                                "type": "string"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "description": "Section ID",
                                "type": "integer"
                              },
                              "order_index": {
                                "description": "Order of section in the song",
                                "type": "integer"
                              },
                              "section_number": {
                                "description": "Section number (if applicable)",
                                "type": "string"
                              },
                              "section_type": {
                                "description": "Type of section (verse, chorus, bridge, etc.)",
                                "type": "string"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get all sections for a specific song",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/{song_id}/sections/{section_id}": {
      "get": {
        "description": "Retrieve a specific section by its ID (accessible if song is owned, shared, or public)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Section ID",
            "in": "path",
            "minimum": 1,
            "name": "section_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Song section retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "content": {
                          "description": "Raw ChordPro content for this section",
                          "type": "string"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "Section ID",
                          "type": "integer"
                        },
                        "order_index": {
                          "description": "Order of section in the song",
                          "type": "integer"
                        },
                        "section_number": {
                          "description": "Section number (if applicable)",
                          "type": "string"
                        },
                        "section_type": {
                          "description": "Type of section (verse, chorus, bridge, etc.)",
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song or section not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get a specific section by ID",
        "tags": [
          "Songs"
        ]
      }
    },
    "/songs/{song_id}/share": {
      "post": {
        "description": "Share a song with specified users and permission levels (requires admin permissions)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Sharing details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "permission_level": {
                  "description": "Permission level to grant",
                  "enum": [
                    "read",
                    "edit",
                    "admin"
                  ],
                  "example": "edit",
                  "type": "string"
                },
                "user_email": {
                  "description": "Email of user to share with",
                  "example": "collaborator@example.com",
                  "format": "email",
                  "type": "string"
                }
              },
              "required": [
                "user_email",
                "permission_level"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Song shared successfully",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success"
                },
                {
                  "properties": {
                    "data": {
                      "properties": {
                        "permission_level": {
                          "description": "Permission level granted",
                          "type": "string"
                        },
                        "user_email": {
                          "description": "Email of the user granted access",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "ID of the user granted access",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song or user not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Share a song with other users",
        "tags": [
          "Collaboration"
        ]
      }
    },
    "/songs/{song_id}/share/{user_id}": {
      "delete": {
        "description": "Remove user's access to the song (requires admin permissions)",
        "parameters": [
          {
            "description": "Song ID",
            "in": "path",
            "minimum": 1,
            "name": "song_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User ID to revoke access from",
            "in": "path",
            "minimum": 1,
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Access revoked successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Song or user not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Revoke user access to a song",
        "tags": [
          "Collaboration"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "description": "JWT token. Format: Bearer {token}",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}